
Enum(_id='https://rdf.spdx.org/v3/AI/SafetyRiskAssessmentType', clsname='https_rdfspdxorgv3AISafetyRiskAssessmentType', values=[EnumValue(_id='https://rdf.spdx.org/v3/AI/SafetyRiskAssessmentType/high', varname='high', comment='The second-highest level of risk posed by an AI software.'), EnumValue(_id='https://rdf.spdx.org/v3/AI/SafetyRiskAssessmentType/low', varname='low', comment='Low/no risk is posed by the AI software.'), EnumValue(_id='https://rdf.spdx.org/v3/AI/SafetyRiskAssessmentType/medium', varname='medium', comment='The third-highest level of risk posed by an AI software.'), EnumValue(_id='https://rdf.spdx.org/v3/AI/SafetyRiskAssessmentType/serious', varname='serious', comment='The highest level of risk posed by an AI software.')], comment='Categories of safety risk impact of the application.')
Enum(_id='https://rdf.spdx.org/v3/Core/AnnotationType', clsname='https_rdfspdxorgv3CoreAnnotationType', values=[EnumValue(_id='https://rdf.spdx.org/v3/Core/AnnotationType/other', varname='other', comment='Used to store extra information about an Element which is not part of a Review (e.g. extra information provided during the creation of the Element).'), EnumValue(_id='https://rdf.spdx.org/v3/Core/AnnotationType/review', varname='review', comment='Used when someone reviews the Element.')], comment='Specifies the type of an annotation.')
Enum(_id='https://rdf.spdx.org/v3/Core/ExternalIdentifierType', clsname='https_rdfspdxorgv3CoreExternalIdentifierType', values=[EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalIdentifierType/cpe22', varname='cpe22', comment='https://cpe.mitre.org/files/cpe-specification_2.2.pdf'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalIdentifierType/cpe23', varname='cpe23', comment='https://nvlpubs.nist.gov/nistpubs/Legacy/IR/nistir7695.pdf'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalIdentifierType/cve', varname='cve', comment='An identifier for a specific software flaw defined within the official CVE Dictionary and that conforms to the CVE specification as defined by https://csrc.nist.gov/glossary/term/cve_id.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalIdentifierType/email', varname='email', comment='https://datatracker.ietf.org/doc/html/rfc3696#section-3'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalIdentifierType/gitoid', varname='gitoid', comment="https://www.iana.org/assignments/uri-schemes/prov/gitoid Gitoid stands for [Git Object ID](https://git-scm.com/book/en/v2/Git-Internals-Git-Objects) and a gitoid of type blob is a unique hash of a binary artifact. A gitoid may represent the software [Artifact ID](https://github.com/omnibor/spec/blob/main/spec/SPEC.md#artifact-id) or the [OmniBOR Identifier](https://github.com/omnibor/spec/blob/main/spec/SPEC.md#omnibor-identifier) for the software artifact's associated [OmniBOR Document](https://github.com/omnibor/spec/blob/main/spec/SPEC.md#omnibor-document); this ambiguity exists because the OmniBOR Document is itself an artifact, and the gitoid of that artifact is its valid identifier. Omnibor is a minimalistic schema to describe software [Artifact Dependency Graphs](https://github.com/omnibor/spec/blob/main/spec/SPEC.md#artifact-dependency-graph-adg). Gitoids calculated on software artifacts (Snippet, File, or Package Elements) should be recorded in the SPDX 3.0 SoftwareArtifact's ContentIdentifier property. Gitoids calculated on the OmniBOR Document (OmniBOR Identifiers) should be recorded in the SPDX 3.0 Element's ExternalIdentifier property."), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalIdentifierType/other', varname='other', comment="Used when the type doesn't match any of the other options."), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalIdentifierType/packageUrl', varname='packageUrl', comment='https://github.com/package-url/purl-spec'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalIdentifierType/securityOther', varname='securityOther', comment='Used when there is a security related identifier of unspecified type.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalIdentifierType/swhid', varname='swhid', comment='SoftWare Hash IDentifier, persistent intrinsic identifiers for digital artifacts, such as files, trees (also known as directories or folders), commits, and other objects typically found in version control systems. The syntax of the identifiers is defined in the [SWHID specification](https://www.swhid.org/specification/v1.1/4.Syntax) and they typically look like `swh:1:cnt:94a9ed024d3859793618152ea559a168bbcbb5e2`.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalIdentifierType/swid', varname='swid', comment='https://www.ietf.org/archive/id/draft-ietf-sacm-coswid-21.html#section-2.3'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalIdentifierType/urlScheme', varname='urlScheme', comment='the scheme used in order to locate a resource https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml')], comment='Specifies the type of an external identifier.')
Enum(_id='https://rdf.spdx.org/v3/Core/ExternalRefType', clsname='https_rdfspdxorgv3CoreExternalRefType', values=[EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/altDownloadLocation', varname='altDownloadLocation', comment='A reference to an alternative download location.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/altWebPage', varname='altWebPage', comment='A reference to an alternative web page.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/binaryArtifact', varname='binaryArtifact', comment='A reference to binary artifacts related to a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/bower', varname='bower', comment='A reference to a bower package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/buildMeta', varname='buildMeta', comment='A reference build metadata related to a published package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/buildSystem', varname='buildSystem', comment='A reference build system used to create or publish the package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/certificationReport', varname='certificationReport', comment='A reference to a certification report for a package from an accredited/independent body.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/chat', varname='chat', comment='A reference to the instant messaging system used by the maintainer for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/componentAnalysisReport', varname='componentAnalysisReport', comment='A reference to a Software Composition Analysis (SCA) report.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/documentation', varname='documentation', comment='A reference to the documentation for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/dynamicAnalysisReport', varname='dynamicAnalysisReport', comment='A reference to a dynamic analysis report for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/eolNotice', varname='eolNotice', comment='A reference to the End Of Sale (EOS) and/or End Of Life (EOL) information related to a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/exportControlAssessment', varname='exportControlAssessment', comment='A reference to a export control assessment for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/funding', varname='funding', comment='A reference to funding information related to a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/issueTracker', varname='issueTracker', comment='A reference to the issue tracker for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/license', varname='license', comment='A reference to additional license information related to an artifact.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/mailingList', varname='mailingList', comment='A reference to the mailing list used by the maintainer for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/mavenCentral', varname='mavenCentral', comment='A reference to a maven repository artifact.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/metrics', varname='metrics', comment='A reference to metrics related to package such as OpenSSF scorecards.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/npm', varname='npm', comment='A reference to an npm package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/nuget', varname='nuget', comment='A reference to a nuget package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/other', varname='other', comment="Used when the type doesn't match any of the other options."), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/privacyAssessment', varname='privacyAssessment', comment='A reference to a privacy assessment for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/productMetadata', varname='productMetadata', comment="A reference to additional product metadata such as reference within organization's product catalog."), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/purchaseOrder', varname='purchaseOrder', comment='A reference to a purchase order for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/qualityAssessmentReport', varname='qualityAssessmentReport', comment='A reference to a quality assessment for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/releaseHistory', varname='releaseHistory', comment='A reference to a published list of releases for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/releaseNotes', varname='releaseNotes', comment='A reference to the release notes for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/riskAssessment', varname='riskAssessment', comment='A reference to a risk assessment for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/runtimeAnalysisReport', varname='runtimeAnalysisReport', comment='A reference to a runtime analysis report for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/secureSoftwareAttestation', varname='secureSoftwareAttestation', comment='A reference to information assuring that the software is developed using security practices as defined by [NIST SP 800-218 Secure Software Development Framework (SSDF)](https://csrc.nist.gov/publications/detail/sp/800-218/final) or [CISA Secure Software Development Attestation Form](https://www.cisa.gov/sites/default/files/2023-04/secure-software-self-attestation_common-form_508.pdf).'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/securityAdversaryModel', varname='securityAdversaryModel', comment='A reference to the security adversary model for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/securityAdvisory', varname='securityAdvisory', comment='A reference to a published security advisory (where advisory as defined per ISO 29147:2018) that may affect one or more elements, e.g., vendor advisories or specific NVD entries.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/securityFix', varname='securityFix', comment='A reference to the patch or source code that fixes a vulnerability.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/securityOther', varname='securityOther', comment='A reference to related security information of unspecified type.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/securityPenTestReport', varname='securityPenTestReport', comment='A reference to a [penetration test](https://en.wikipedia.org/wiki/Penetration_test) report for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/securityPolicy', varname='securityPolicy', comment='A reference to instructions for reporting newly discovered security vulnerabilities for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/securityThreatModel', varname='securityThreatModel', comment='A reference the [security threat model](https://en.wikipedia.org/wiki/Threat_model) for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/socialMedia', varname='socialMedia', comment='A reference to a social media channel for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/sourceArtifact', varname='sourceArtifact', comment='A reference to an artifact containing the sources for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/staticAnalysisReport', varname='staticAnalysisReport', comment='A reference to a static analysis report for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/support', varname='support', comment='A reference to the software support channel or other support information for a package.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/vcs', varname='vcs', comment='A reference to a version control system related to a software artifact.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/vulnerabilityDisclosureReport', varname='vulnerabilityDisclosureReport', comment="A reference to a Vulnerability Disclosure Report (VDR) which provides the software supplier's analysis and findings describing the impact (or lack of impact) that reported vulnerabilities have on packages or products in the supplier's SBOM as defined in [NIST SP 800-161](https://csrc.nist.gov/publications/detail/sp/800-161/rev-1/final)."), EnumValue(_id='https://rdf.spdx.org/v3/Core/ExternalRefType/vulnerabilityExploitabilityAssessment', varname='vulnerabilityExploitabilityAssessment', comment='A reference to a Vulnerability Exploitability eXchange (VEX) statement which provides information on whether a product is impacted by a specific vulnerability in an included package and, if affected, whether there are actions recommended to remediate. See also [NTIA VEX one-page](https://ntia.gov/files/ntia/publications/vex_one-page_summary.pdf).')], comment='Specifies the type of an external reference.')
Enum(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm', clsname='https_rdfspdxorgv3CoreHashAlgorithm', values=[EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/blake2b256', varname='blake2b256', comment='blake2b algorithm with a digest size of 256 https://datatracker.ietf.org/doc/html/rfc7693#section-4'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/blake2b384', varname='blake2b384', comment='blake2b algorithm with a digest size of 384 https://datatracker.ietf.org/doc/html/rfc7693#section-4'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/blake2b512', varname='blake2b512', comment='blake2b algorithm with a digest size of 512 https://datatracker.ietf.org/doc/html/rfc7693#section-4'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/blake3', varname='blake3', comment='https://github.com/BLAKE3-team/BLAKE3-specs/blob/master/blake3.pdf'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/crystalsDilithium', varname='crystalsDilithium', comment='https://pq-crystals.org/dilithium/index.shtml'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/crystalsKyber', varname='crystalsKyber', comment='https://pq-crystals.org/kyber/index.shtml'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/falcon', varname='falcon', comment='https://falcon-sign.info/falcon.pdf'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/md2', varname='md2', comment='https://datatracker.ietf.org/doc/rfc1319/'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/md4', varname='md4', comment='https://datatracker.ietf.org/doc/html/rfc1186'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/md5', varname='md5', comment='https://datatracker.ietf.org/doc/html/rfc1321'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/md6', varname='md6', comment='https://people.csail.mit.edu/rivest/pubs/RABCx08.pdf'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/other', varname='other', comment='any hashing algorithm that does not exist in this list of entries'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/sha1', varname='sha1', comment='https://datatracker.ietf.org/doc/html/rfc3174'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/sha224', varname='sha224', comment='secure hashing algorithm with a digest length of 224 https://datatracker.ietf.org/doc/html/draft-ietf-pkix-sha224-01'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/sha256', varname='sha256', comment='secure hashing algorithm with a digest length of 256 https://www.rfc-editor.org/rfc/rfc4634'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/sha384', varname='sha384', comment='secure hashing algorithm with a digest length of 384 https://www.rfc-editor.org/rfc/rfc4634'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/sha3_224', varname='sha3_224', comment='sha3 with a digest length of 224 https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/sha3_256', varname='sha3_256', comment='sha3 with a digest length of 256 https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/sha3_384', varname='sha3_384', comment='sha3 with a digest length of 384 https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/sha3_512', varname='sha3_512', comment='sha3 with a digest length of 512 https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf'), EnumValue(_id='https://rdf.spdx.org/v3/Core/HashAlgorithm/sha512', varname='sha512', comment='secure hashing algorithm with a digest length of 512 https://www.rfc-editor.org/rfc/rfc4634')], comment='A mathematical algorithm that maps data of arbitrary size to a bit string.')
Enum(_id='https://rdf.spdx.org/v3/Core/LifecycleScopeType', clsname='https_rdfspdxorgv3CoreLifecycleScopeType', values=[EnumValue(_id='https://rdf.spdx.org/v3/Core/LifecycleScopeType/build', varname='build', comment="A relationship has specific context implications during an element's build phase, during development."), EnumValue(_id='https://rdf.spdx.org/v3/Core/LifecycleScopeType/design', varname='design', comment="A relationship has specific context implications during an element's design."), EnumValue(_id='https://rdf.spdx.org/v3/Core/LifecycleScopeType/development', varname='development', comment='A relationship has specific context implications during development phase of an element.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/LifecycleScopeType/other', varname='other', comment='A relationship has other specific context information necessary to capture that the above set of enumerations does not handle.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/LifecycleScopeType/runtime', varname='runtime', comment='A relationship has specific context implications during the execution phase of an element.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/LifecycleScopeType/test', varname='test', comment="A relationship has specific context implications during an element's testing phase, during development.")], comment='Provide an enumerated set of software lifecycle phases that can provide context to relationships.')
Enum(_id='https://rdf.spdx.org/v3/Core/PresenceType', clsname='https_rdfspdxorgv3CorePresenceType', values=[EnumValue(_id='https://rdf.spdx.org/v3/Core/PresenceType/no', varname='no', comment='Indicates absence of the field.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/PresenceType/noAssertion', varname='noAssertion', comment='Makes no assertion about the field.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/PresenceType/yes', varname='yes', comment='Indicates presence of the field.')], comment='Categories of presence or absence.')
Enum(_id='https://rdf.spdx.org/v3/Core/ProfileIdentifierType', clsname='https_rdfspdxorgv3CoreProfileIdentifierType', values=[EnumValue(_id='https://rdf.spdx.org/v3/Core/ProfileIdentifierType/ai', varname='ai', comment='the element follows the AI profile specification'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ProfileIdentifierType/build', varname='build', comment='the element follows the Build profile specification'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ProfileIdentifierType/core', varname='core', comment='the element follows the Core profile specification'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ProfileIdentifierType/dataset', varname='dataset', comment='the element follows the Dataset profile specification'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ProfileIdentifierType/expandedLicensing', varname='expandedLicensing', comment='the element follows the expanded Licensing profile specification'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ProfileIdentifierType/extension', varname='extension', comment='the element follows the Extension profile specification'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ProfileIdentifierType/security', varname='security', comment='the element follows the Security profile specification'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ProfileIdentifierType/simpleLicensing', varname='simpleLicensing', comment='the element follows the simple Licensing profile specification'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ProfileIdentifierType/software', varname='software', comment='the element follows the Software profile specification'), EnumValue(_id='https://rdf.spdx.org/v3/Core/ProfileIdentifierType/usage', varname='usage', comment='the element follows the Usage profile specification')], comment='Enumeration of the valid profiles.')
Enum(_id='https://rdf.spdx.org/v3/Core/RelationshipCompleteness', clsname='https_rdfspdxorgv3CoreRelationshipCompleteness', values=[EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipCompleteness/complete', varname='complete', comment='The relationship is known to be exhaustive.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipCompleteness/incomplete', varname='incomplete', comment='The relationship is known not to be exhaustive.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipCompleteness/noAssertion', varname='noAssertion', comment='No assertion can be made about the completeness of the relationship.')], comment='Indicates whether a relationship is known to be complete, incomplete, or if no assertion is made with respect to relationship completeness.')
Enum(_id='https://rdf.spdx.org/v3/Core/RelationshipType', clsname='https_rdfspdxorgv3CoreRelationshipType', values=[EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/affects', varname='affects', comment='(Security/VEX) The `from` vulnerability affect each `to` Element'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/amendedBy', varname='amendedBy', comment='The `from` Element is amended by each `to` Element'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/ancestorOf', varname='ancestorOf', comment='The `from` Element is an ancestor of each `to` Element'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/availableFrom', varname='availableFrom', comment='The `from` Element is available from the additional supplier described by each `to` Element'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/configures', varname='configures', comment='The `from` Element is a configuration applied to each `to` Element during a LifecycleScopeType period'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/contains', varname='contains', comment='The `from` Element contains each `to` Element'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/coordinatedBy', varname='coordinatedBy', comment='(Security) The `from` Vulnerability is coordinatedBy the `to` Agent(s) (vendor, researcher, or consumer agent)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/copiedTo', varname='copiedTo', comment='The `from` Element has been copied to each `to` Element'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/delegatedTo', varname='delegatedTo', comment='The `from` Agent is delegating an action to the Agent of the `to` Relationship (which must be of type invokedBy) during a LifecycleScopeType. (e.g. the `to` invokedBy Relationship is being done on behalf of `from`)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/dependsOn', varname='dependsOn', comment='The `from` Element depends on each `to` Element during a LifecycleScopeType period.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/descendantOf', varname='descendantOf', comment='The `from` Element is a descendant of each `to` Element'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/describes', varname='describes', comment='The `from` Element describes each `to` Element. To denote the root(s) of a tree of elements in a collection, the rootElement property should be used.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/doesNotAffect', varname='doesNotAffect', comment='(Security/VEX) The `from` Vulnerability has no impact on each `to` Element'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/expandsTo', varname='expandsTo', comment='The `from` archive expands out as an artifact described by each `to` Element'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/exploitCreatedBy', varname='exploitCreatedBy', comment='(Security) The `from` Vulnerability has had an exploit created against it by each `to` Agent'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/fixedBy', varname='fixedBy', comment='(Security) Designates a `from` Vulnerability has been fixed by the `to` Agent(s)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/fixedIn', varname='fixedIn', comment='(Security/VEX) A `from` Vulnerability has been fixed in each of the `to` Element(s)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/foundBy', varname='foundBy', comment='(Security) Designates a `from` Vulnerability was originally discovered by the `to` Agent(s)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/generates', varname='generates', comment='The `from` Element generates each `to` Element'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasAddedFile', varname='hasAddedFile', comment='Every `to` Element is is a file added to the `from` Element (`from` hasAddedFile `to`)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasAssessmentFor', varname='hasAssessmentFor', comment='(Security) Relates a `from` Vulnerability and each `to` Element(s) with a security assessment. To be used with `VulnAssessmentRelationship` types'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasAssociatedVulnerability', varname='hasAssociatedVulnerability', comment='(Security) Used to associate a `from` Artifact with each `to` Vulnerability'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasConcludedLicense', varname='hasConcludedLicense', comment='The `from` Software Artifact is concluded by the SPDX data creator to be governed by each `to` license'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasDataFile', varname='hasDataFile', comment='The `from` Element treats each `to` Element as a data file'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasDeclaredLicense', varname='hasDeclaredLicense', comment='The `from` Software Artifact was discovered to actually contain each `to` license, for example as detected by use of automated tooling.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasDeletedFile', varname='hasDeletedFile', comment='Every `to` Element is a file deleted from the `from` Element (`from` hasDeletedFile `to`)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasDependencyManifest', varname='hasDependencyManifest', comment='The `from` Element has manifest files that contain dependency information in each `to` Element'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasDistributionArtifact', varname='hasDistributionArtifact', comment='The `from` Element is distributed as an artifact in each Element `to`, (e.g. an RPM or archive file)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasDocumentation', varname='hasDocumentation', comment='The `from` Element is documented by each `to` Element'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasDynamicLink', varname='hasDynamicLink', comment='The `from` Element dynamically links in each `to` Element, during a LifecycleScopeType period.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasEvidence', varname='hasEvidence', comment='(Dataset) Every `to` Element is considered as evidence for the `from` Element (`from` hasEvidence `to`)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasExample', varname='hasExample', comment='Every `to` Element is an example for the `from` Element (`from` hasExample `to`)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasHost', varname='hasHost', comment='The `from` Build was run on the `to` Element during a LifecycleScopeType period (e.g. The host that the build runs on)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasInputs', varname='hasInputs', comment='The `from` Build has each `to` Elements as an input during a LifecycleScopeType period.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasMetadata', varname='hasMetadata', comment='Every `to` Element is metadata about the `from` Element (`from` hasMetadata `to`)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasOptionalComponent', varname='hasOptionalComponent', comment='Every `to` Element is an optional component of the `from` Element (`from` hasOptionalComponent` `to`)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasOptionalDependency', varname='hasOptionalDependency', comment='The `from` Element optionally depends on each `to` Element during a LifecycleScopeType period'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasOutputs', varname='hasOutputs', comment='The `from` Build element generates each `to` Element as an output during a LifecycleScopeType period.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasPrerequsite', varname='hasPrerequsite', comment='The `from` Element has a prerequsite on each `to` Element, during a LifecycleScopeType period'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasProvidedDependency', varname='hasProvidedDependency', comment='The `from` Element has a dependency on each `to` Element, but dependency is not in the distributed artifact, but assumed to be provided, during a LifecycleScopeType period'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasRequirement', varname='hasRequirement', comment='The `from` Element has a requirement on each `to` Element, during a LifecycleScopeType period'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasSpecification', varname='hasSpecification', comment='Every `to` Element is a specification for the `from` Element (`from` hasSpecification `to`), during a LifecycleScopeType period'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasStaticLink', varname='hasStaticLink', comment='The `from` Element statically links in each `to` Element, during a LifecycleScopeType period'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasTest', varname='hasTest', comment='Every `to` Element is a test artifact for the `from` Element (`from` hasTest `to`), during a LifecycleScopeType period'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasTestCase', varname='hasTestCase', comment='Every `to` Element is a test case for the `from` Element (`from` hasTestCase `to`)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/hasVariant', varname='hasVariant', comment='Every `to` Element is a variant the `from` Element (`from` hasVariant `to`)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/invokedBy', varname='invokedBy', comment='The `from` Element was invoked by the `to` Agent during a LifecycleScopeType period (for example, a Build element that describes a build step)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/modifiedBy', varname='modifiedBy', comment='The `from` Element is modified by each `to` Element'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/other', varname='other', comment='Every `to` Element is related to the `from` Element where the relationship type is not described by any of the SPDX relationhip types (this relationship is directionless)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/packagedBy', varname='packagedBy', comment='Every `to` Element is a packaged instance of the `from` Element (`from` packagedBy `to`)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/patchedBy', varname='patchedBy', comment='Every `to` Element is a patch for the `from` Element (`from` patchedBy `to`)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/publishedBy', varname='publishedBy', comment='(Security) Designates a `from` Vulnerability was made available for public use or reference by each `to` Agent'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/reportedBy', varname='reportedBy', comment='(Security) Designates a `from` Vulnerability was first reported to a project, vendor, or tracking database for formal identification by each `to` Agent'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/republishedBy', varname='republishedBy', comment="(Security) Designates a `from` Vulnerability's details were tracked, aggregated, and/or enriched to improve context (i.e. NVD) by a `to` Agent(s)"), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/serializedInArtifact', varname='serializedInArtifact', comment='The `from` SPDXDocument can be found in a serialized form in each `to` Artifact'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/testedOn', varname='testedOn', comment='(AI, Dataset) The `from` Element has been tested on the `to` Element'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/trainedOn', varname='trainedOn', comment='(AI, Dataset) The `from` Element has been trained by the `to` Element(s)'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/underInvestigationFor', varname='underInvestigationFor', comment='(Security/VEX) The `from` Vulnerability impact is being investigated for each `to` Element'), EnumValue(_id='https://rdf.spdx.org/v3/Core/RelationshipType/usesTool', varname='usesTool', comment='The `from` Element uses each `to` Element as a tool during a LifecycleScopeType period.')], comment='Information about the relationship between two Elements.')
Enum(_id='https://rdf.spdx.org/v3/Core/SupportType', clsname='https_rdfspdxorgv3CoreSupportType', values=[EnumValue(_id='https://rdf.spdx.org/v3/Core/SupportType/development', varname='development', comment='the artifact is in active development and is not considered ready for formal support from the supplier.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/SupportType/endOfSupport', varname='endOfSupport', comment='there is a defined end of support for the artifact from the supplier.  This may also be referred to as end of life. There is a validUntilDate that can be used to signal when support ends for the artifact.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/SupportType/limitedSupport', varname='limitedSupport', comment='the artifact has been released, and there is limited support available from the supplier. There is a validUntilDate that can provide additional information about the duration of support.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/SupportType/noAssertion', varname='noAssertion', comment='no assertion about the type of support is made.   This is considered the default if no other support type is used.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/SupportType/noSupport', varname='noSupport', comment='there is no support for the artifact from the supplier, consumer assumes any support obligations.'), EnumValue(_id='https://rdf.spdx.org/v3/Core/SupportType/support', varname='support', comment='the artifact has been released, and is supported from the supplier.   There is a validUntilDate that can provide additional information about the duration of support.')], comment='Indicates the type of support that is associated with an artifact.')
Enum(_id='https://rdf.spdx.org/v3/Dataset/ConfidentialityLevelType', clsname='https_rdfspdxorgv3DatasetConfidentialityLevelType', values=[EnumValue(_id='https://rdf.spdx.org/v3/Dataset/ConfidentialityLevelType/amber', varname='amber', comment='Data points in the dataset can be shared only with specific organizations and their clients on a need to know basis.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/ConfidentialityLevelType/clear', varname='clear', comment='Dataset may be distributed freely, without restriction.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/ConfidentialityLevelType/green', varname='green', comment='Dataset can be shared within a community of peers and partners.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/ConfidentialityLevelType/red', varname='red', comment='Data points in the dataset are highly confidential and can only be shared with named recipients.')], comment='Categories of confidentiality level.')
Enum(_id='https://rdf.spdx.org/v3/Dataset/DatasetAvailabilityType', clsname='https_rdfspdxorgv3DatasetDatasetAvailabilityType', values=[EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetAvailabilityType/clickthrough', varname='clickthrough', comment='the dataset is not publicly available and can only be accessed after affirmatively accepting terms on a clickthrough webpage.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetAvailabilityType/directDownload', varname='directDownload', comment='the dataset is publicly available and can be downloaded directly.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetAvailabilityType/query', varname='query', comment='the dataset is publicly available, but not all at once, and can only be accessed through queries which return parts of the dataset.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetAvailabilityType/registration', varname='registration', comment='the dataset is not publicly available and an email registration is required before accessing the dataset, although without an affirmative acceptance of terms.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetAvailabilityType/scrapingScript', varname='scrapingScript', comment='the dataset provider is not making available the underlying data and the dataset must be reassembled, typically using the provided script for scraping the data.')], comment='Availability of dataset')
Enum(_id='https://rdf.spdx.org/v3/Dataset/DatasetType', clsname='https_rdfspdxorgv3DatasetDatasetType', values=[EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetType/audio', varname='audio', comment='data is audio based, such as a collection of music from the 80s.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetType/categorical', varname='categorical', comment='data that is classified into a discrete number of categories, such as the eye color of a population of people.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetType/graph', varname='graph', comment='data is in the form of a graph where entries are somehow related to each other through edges, such a social network of friends.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetType/image', varname='image', comment='data is a collection of images such as pictures of animals.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetType/noAssertion', varname='noAssertion', comment='data type is not known.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetType/numeric', varname='numeric', comment='data consists only of numeric entries.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetType/other', varname='other', comment='data is of a type not included in this list.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetType/sensor', varname='sensor', comment='data is recorded from a physical sensor, such as a thermometer reading or biometric device.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetType/structured', varname='structured', comment='data is stored in tabular format or retrieved from a relational database.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetType/syntactic', varname='syntactic', comment='data describes the syntax or semantics of a language or text, such as a parse tree used for natural language processing.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetType/text', varname='text', comment='data consists of unstructured text, such as a book, wikipedia article (without images), or transcript.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetType/timeseries', varname='timeseries', comment='data is recorded in an ordered sequence of timestamped entries, such as the price of a stock over the course of a day.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetType/timestamp', varname='timestamp', comment='data is recorded with a timestamp for each entry, but not necessarily ordered or at specific intervals, such as when a taxi ride starts and ends.'), EnumValue(_id='https://rdf.spdx.org/v3/Dataset/DatasetType/video', varname='video', comment='data is video based, such as a collection of movie clips featuring Tom Hanks.')], comment='Enumeration of dataset types.')
Enum(_id='https://rdf.spdx.org/v3/Security/CvssSeverityType', clsname='https_rdfspdxorgv3SecurityCvssSeverityType', values=[EnumValue(_id='https://rdf.spdx.org/v3/Security/CvssSeverityType/critical', varname='critical', comment='When a CVSS score is between 9.0 - 10.0'), EnumValue(_id='https://rdf.spdx.org/v3/Security/CvssSeverityType/high', varname='high', comment='When a CVSS score is between 7.0 - 8.9'), EnumValue(_id='https://rdf.spdx.org/v3/Security/CvssSeverityType/low', varname='low', comment='When a CVSS score is between 0 - 3.9'), EnumValue(_id='https://rdf.spdx.org/v3/Security/CvssSeverityType/medium', varname='medium', comment='When a CVSS score is between 4 - 6.9'), EnumValue(_id='https://rdf.spdx.org/v3/Security/CvssSeverityType/none', varname='none', comment='When a CVSS score is 0')], comment='Specifies the CVSS base, temporal, threat, or environmental severity type.')
Enum(_id='https://rdf.spdx.org/v3/Security/ExploitCatalogType', clsname='https_rdfspdxorgv3SecurityExploitCatalogType', values=[EnumValue(_id='https://rdf.spdx.org/v3/Security/ExploitCatalogType/kev', varname='kev', comment="CISA's Known Exploited Vulnerability (KEV) Catalog"), EnumValue(_id='https://rdf.spdx.org/v3/Security/ExploitCatalogType/other', varname='other', comment='Other exploit catalogs')], comment='Specifies the exploit catalog type.')
Enum(_id='https://rdf.spdx.org/v3/Security/SsvcDecisionType', clsname='https_rdfspdxorgv3SecuritySsvcDecisionType', values=[EnumValue(_id='https://rdf.spdx.org/v3/Security/SsvcDecisionType/act', varname='act', comment="The vulnerability requires attention from the organization's internal, supervisory-level and leadership-level individuals. Necessary actions include requesting assistance or information about the vulnerability, as well as publishing a notification either internally and/or externally. Typically, internal groups would meet to determine the overall response and then execute agreed upon actions. CISA recommends remediating Act vulnerabilities as soon as possible."), EnumValue(_id='https://rdf.spdx.org/v3/Security/SsvcDecisionType/attend', varname='attend', comment="The vulnerability requires attention from the organization's internal, supervisory-level individuals. Necessary actions include requesting assistance or information about the vulnerability, and may involve publishing a notification either internally and/or externally. CISA recommends remediating Attend vulnerabilities sooner than standard update timelines."), EnumValue(_id='https://rdf.spdx.org/v3/Security/SsvcDecisionType/track', varname='track', comment='The vulnerability does not require action at this time. The organization would continue to track the vulnerability and reassess it if new information becomes available. CISA recommends remediating Track vulnerabilities within standard update timelines.'), EnumValue(_id='https://rdf.spdx.org/v3/Security/SsvcDecisionType/trackStar', varname='trackStar', comment='(Track* in the SSVC spec) The vulnerability contains specific characteristics that may require closer monitoring for changes. CISA recommends remediating Track* vulnerabilities within standard update timelines.')], comment='Specifies the SSVC decision type.')
Enum(_id='https://rdf.spdx.org/v3/Security/VexJustificationType', clsname='https_rdfspdxorgv3SecurityVexJustificationType', values=[EnumValue(_id='https://rdf.spdx.org/v3/Security/VexJustificationType/componentNotPresent', varname='componentNotPresent', comment='The software is not affected because the vulnerable component is not in the product.'), EnumValue(_id='https://rdf.spdx.org/v3/Security/VexJustificationType/inlineMitigationsAlreadyExist', varname='inlineMitigationsAlreadyExist', comment='Built-in inline controls or mitigations prevent an adversary from leveraging the vulnerability.'), EnumValue(_id='https://rdf.spdx.org/v3/Security/VexJustificationType/vulnerableCodeCannotBeControlledByAdversary', varname='vulnerableCodeCannotBeControlledByAdversary', comment='The vulnerable component is present, and the component contains the vulnerable code. However, vulnerable code is used in such a way that an attacker cannot mount any anticipated attack.'), EnumValue(_id='https://rdf.spdx.org/v3/Security/VexJustificationType/vulnerableCodeNotInExecutePath', varname='vulnerableCodeNotInExecutePath', comment='The affected code is not reachable through the execution of the code, including non-anticipated states of the product.'), EnumValue(_id='https://rdf.spdx.org/v3/Security/VexJustificationType/vulnerableCodeNotPresent', varname='vulnerableCodeNotPresent', comment='The product is not affected because the code underlying the vulnerability is not present in the product.')], comment='Specifies the VEX justification type.')
Enum(_id='https://rdf.spdx.org/v3/Software/SbomType', clsname='https_rdfspdxorgv3SoftwareSbomType', values=[EnumValue(_id='https://rdf.spdx.org/v3/Software/SbomType/analyzed', varname='analyzed', comment='SBOM generated through analysis of artifacts (e.g., executables, packages, containers, and virtual machine images) after its build. Such analysis generally requires a variety of heuristics. In some contexts, this may also be referred to as a “3rd party” SBOM.'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SbomType/build', varname='build', comment='SBOM generated as part of the process of building the software to create a releasable artifact (e.g., executable or package) from data such as source files, dependencies, built components, build process ephemeral data, and other SBOMs.'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SbomType/deployed', varname='deployed', comment='SBOM provides an inventory of software that is present on a system. This may be an assembly of other SBOMs that combines analysis of configuration options, and examination of execution behavior in a (potentially simulated) deployment environment.'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SbomType/design', varname='design', comment='SBOM of intended, planned software project or product with included components (some of which may not yet exist) for a new software artifact.'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SbomType/runtime', varname='runtime', comment='SBOM generated through instrumenting the system running the software, to capture only components present in the system, as well as external call-outs or dynamically loaded components. In some contexts, this may also be referred to as an “Instrumented” or “Dynamic” SBOM.'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SbomType/source', varname='source', comment='SBOM created directly from the development environment, source files, and included dependencies used to build an product artifact.')], comment='Provides a set of values to be used to describe the common types of SBOMs that tools may create.')
Enum(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose', clsname='https_rdfspdxorgv3SoftwareSoftwarePurpose', values=[EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/application', varname='application', comment='the Element is a software application'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/archive', varname='archive', comment='the Element is an archived collection of one or more files (.tar, .zip, etc)'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/bom', varname='bom', comment='Element is a bill of materials'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/configuration', varname='configuration', comment='Element is configuration data'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/container', varname='container', comment='the Element is a container image which can be used by a container runtime application'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/data', varname='data', comment='Element is data'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/device', varname='device', comment='the Element refers to a chipset, processor, or electronic board'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/deviceDriver', varname='deviceDriver', comment='Element represents software that controls hardware devices'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/diskImage', varname='diskImage', comment='the Element refers to a disk image that can be written to a disk, booted in a VM, etc. A disk image typically contains most or all of the components necessary to boot, such as bootloaders, kernels, firmware, userspace, etc.'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/documentation', varname='documentation', comment='Element is documentation'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/evidence', varname='evidence', comment='the Element is the evidence that a specification or requirement has been fulfilled'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/executable', varname='executable', comment='Element is an Artifact that can be run on a computer'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/file', varname='file', comment='the Element is a single file which can be independently distributed (configuration file, statically linked binary, Kubernetes deployment, etc)'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/filesystemImage', varname='filesystemImage', comment='the Element is a file system image that can be written to a disk (or virtual) partition'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/firmware', varname='firmware', comment="the Element provides low level control over a device's hardware"), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/framework', varname='framework', comment='the Element is a software framework'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/install', varname='install', comment='the Element is used to install software on disk'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/library', varname='library', comment='the Element is a software library'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/manifest', varname='manifest', comment='the Element is a software manifest'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/model', varname='model', comment='the Element is a machine learning or artificial intelligence model'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/module', varname='module', comment='the Element is a module of a piece of software'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/operatingSystem', varname='operatingSystem', comment='the Element is an operating system'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/other', varname='other', comment="the Element doesn't fit into any of the other categories"), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/patch', varname='patch', comment='Element contains a set of changes to update, fix, or improve another Element'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/platform', varname='platform', comment='Element represents a runtime environment'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/requirement', varname='requirement', comment='the Element provides a requirement needed as input for another Element'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/source', varname='source', comment='the Element is a single or a collection of source files'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/specification', varname='specification', comment='the Element is a plan, guideline or strategy how to create, perform or analyse an application'), EnumValue(_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose/test', varname='test', comment='The Element is a test used to verify functionality on an software element')], comment='Provides information about the primary purpose of an Element.')

Class(_id='https://rdf.spdx.org/v3/Core/CreationInfo', clsname='https_rdfspdxorgv3CoreCreationInfo', parent_ids=[], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Core/specVersion', varname='httpsrdfspdxorgv3CorespecVersion', comment='Provides a reference number that can be used to understand how to parse and interpret an Element.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/comment', varname='httpsrdfspdxorgv3Corecomment', comment='Provide consumers with comments by the creator of the Element about the Element.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/created', varname='httpsrdfspdxorgv3Corecreated', comment='Identifies when the Element was originally created.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/createdBy', varname='httpsrdfspdxorgv3CorecreatedBy', comment='Identifies who or what created the Element.', max_count=None, min_count=1, enum_id='', class_id='https://rdf.spdx.org/v3/Core/Agent', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/createdUsing', varname='httpsrdfspdxorgv3CorecreatedUsing', comment='Identifies the tooling that was used during the creation of the Element.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/Tool', datatype='')], comment='Provides information about the creation of the Element.')
Class(_id='https://rdf.spdx.org/v3/Core/DictionaryEntry', clsname='https_rdfspdxorgv3CoreDictionaryEntry', parent_ids=[], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Core/key', varname='httpsrdfspdxorgv3Corekey', comment='A key used in a generic key-value pair.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/value', varname='httpsrdfspdxorgv3Corevalue', comment='A value used in a generic key-value pair.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='A key with an associated value.')
Class(_id='https://rdf.spdx.org/v3/Core/Element', clsname='https_rdfspdxorgv3CoreElement', parent_ids=[], derived_ids=['https://rdf.spdx.org/v3/Build/Build', 'https://rdf.spdx.org/v3/Core/Agent', 'https://rdf.spdx.org/v3/Core/Annotation', 'https://rdf.spdx.org/v3/Core/Artifact', 'https://rdf.spdx.org/v3/Core/ElementCollection', 'https://rdf.spdx.org/v3/Core/Relationship', 'https://rdf.spdx.org/v3/Core/Tool', 'https://rdf.spdx.org/v3/ExpandedLicensing/LicenseAddition', 'https://rdf.spdx.org/v3/SimpleLicensing/AnyLicenseInfo', 'https://rdf.spdx.org/v3/SimpleLicensing/SimpleLicensingText'], properties=[Property(path='https://rdf.spdx.org/v3/Core/name', varname='httpsrdfspdxorgv3Corename', comment='Identifies the name of an Element as designated by the creator.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/summary', varname='httpsrdfspdxorgv3Coresummary', comment='A short description of an Element.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/description', varname='httpsrdfspdxorgv3Coredescription', comment='Provides a detailed description of the Element.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/comment', varname='httpsrdfspdxorgv3Corecomment', comment='Provide consumers with comments by the creator of the Element about the Element.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/creationInfo', varname='httpsrdfspdxorgv3CorecreationInfo', comment='Provides information about the creation of the Element.', max_count=1, min_count=1, enum_id='', class_id='https://rdf.spdx.org/v3/Core/CreationInfo', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/verifiedUsing', varname='httpsrdfspdxorgv3CoreverifiedUsing', comment='Provides an IntegrityMethod with which the integrity of an Element can be asserted.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/IntegrityMethod', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/externalRef', varname='httpsrdfspdxorgv3CoreexternalRef', comment='Points to a resource outside the scope of the SPDX-3.0 content\nthat provides additional characteristics of an Element.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/ExternalRef', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/externalIdentifier', varname='httpsrdfspdxorgv3CoreexternalIdentifier', comment='Provides a reference to a resource outside the scope of SPDX-3.0 content\nthat uniquely identifies an Element.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/ExternalIdentifier', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/extension', varname='httpsrdfspdxorgv3Coreextension', comment='Specifies an Extension characterization of some aspect of an Element.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Extension/Extension', datatype='')], comment='Base domain class from which all other SPDX-3.0 domain classes derive.')
Class(_id='https://rdf.spdx.org/v3/Core/ElementCollection', clsname='https_rdfspdxorgv3CoreElementCollection', parent_ids=['https://rdf.spdx.org/v3/Core/Element'], derived_ids=['https://rdf.spdx.org/v3/Core/Bundle', 'https://rdf.spdx.org/v3/Core/SpdxDocument'], properties=[Property(path='https://rdf.spdx.org/v3/Core/element', varname='httpsrdfspdxorgv3Coreelement', comment='Refers to one or more Elements that are part of an ElementCollection.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/Element', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/rootElement', varname='httpsrdfspdxorgv3CorerootElement', comment='This property is used to denote the root Element(s) of a tree of elements contained in an SBOM.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/Element', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/profileConformance', varname='httpsrdfspdxorgv3CoreprofileConformance', comment='Describes one a profile which the creator of this ElementCollection intends to conform to.', max_count=None, min_count=None, enum_id='https://rdf.spdx.org/v3/Core/ProfileIdentifierType', class_id='', datatype='')], comment='A collection of Elements, not necessarily with unifying context.')
Class(_id='https://rdf.spdx.org/v3/Core/ExternalIdentifier', clsname='https_rdfspdxorgv3CoreExternalIdentifier', parent_ids=[], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Core/externalIdentifierType', varname='httpsrdfspdxorgv3CoreexternalIdentifierType', comment='Specifies the type of the external identifier.', max_count=1, min_count=1, enum_id='https://rdf.spdx.org/v3/Core/ExternalIdentifierType', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/identifier', varname='httpsrdfspdxorgv3Coreidentifier', comment='Uniquely identifies an external element.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/comment', varname='httpsrdfspdxorgv3Corecomment', comment='Provide consumers with comments by the creator of the Element about the Element.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/identifierLocator', varname='httpsrdfspdxorgv3CoreidentifierLocator', comment='Provides the location for more information regarding an external identifier.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#anyURI'), Property(path='https://rdf.spdx.org/v3/Core/issuingAuthority', varname='httpsrdfspdxorgv3CoreissuingAuthority', comment='An entity that is authorized to issue identification credentials.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='A reference to a resource outside the scope of SPDX-3.0 content that uniquely identifies an Element.')
Class(_id='https://rdf.spdx.org/v3/Core/ExternalMap', clsname='https_rdfspdxorgv3CoreExternalMap', parent_ids=[], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Core/externalSpdxId', varname='httpsrdfspdxorgv3CoreexternalSpdxId', comment='Identifies an external Element used within a Document but defined external to that Document.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#anyURI'), Property(path='https://rdf.spdx.org/v3/Core/verifiedUsing', varname='httpsrdfspdxorgv3CoreverifiedUsing', comment='Provides an IntegrityMethod with which the integrity of an Element can be asserted.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/IntegrityMethod', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/locationHint', varname='httpsrdfspdxorgv3CorelocationHint', comment='Provides an indication of where to retrieve an external Element.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#anyURI'), Property(path='https://rdf.spdx.org/v3/Core/definingArtifact', varname='httpsrdfspdxorgv3CoredefiningArtifact', comment='Artifact representing a serialization instance of SPDX data containing the definition of a particular Element.', max_count=1, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/Artifact', datatype='')], comment='A map of Element identifiers that are used within a Document but defined external to that Document.')
Class(_id='https://rdf.spdx.org/v3/Core/ExternalRef', clsname='https_rdfspdxorgv3CoreExternalRef', parent_ids=[], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Core/externalRefType', varname='httpsrdfspdxorgv3CoreexternalRefType', comment='Specifies the type of the external reference.', max_count=1, min_count=None, enum_id='https://rdf.spdx.org/v3/Core/ExternalRefType', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/locator', varname='httpsrdfspdxorgv3Corelocator', comment='Provides the location of an external reference.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/contentType', varname='httpsrdfspdxorgv3CorecontentType', comment='Specifies the media type of an Element or Property.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/comment', varname='httpsrdfspdxorgv3Corecomment', comment='Provide consumers with comments by the creator of the Element about the Element.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='A reference to a resource outside the scope of SPDX-3.0 content.')
Class(_id='https://rdf.spdx.org/v3/Core/IntegrityMethod', clsname='https_rdfspdxorgv3CoreIntegrityMethod', parent_ids=[], derived_ids=['https://rdf.spdx.org/v3/Core/Hash', 'https://rdf.spdx.org/v3/Core/PackageVerificationCode'], properties=[Property(path='https://rdf.spdx.org/v3/Core/comment', varname='httpsrdfspdxorgv3Corecomment', comment='Provide consumers with comments by the creator of the Element about the Element.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='Provides an independently reproducible mechanism that permits verification of a specific Element.')
Class(_id='https://rdf.spdx.org/v3/Core/NamespaceMap', clsname='https_rdfspdxorgv3CoreNamespaceMap', parent_ids=[], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Core/prefix', varname='httpsrdfspdxorgv3Coreprefix', comment='A substitute for a URI.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/namespace', varname='httpsrdfspdxorgv3Corenamespace', comment='Provides an unambiguous mechanism for conveying a URI fragment portion of an ElementID.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#anyURI')], comment='A mapping between prefixes and namespace partial URIs.')
Class(_id='https://rdf.spdx.org/v3/Core/PackageVerificationCode', clsname='https_rdfspdxorgv3CorePackageVerificationCode', parent_ids=['https://rdf.spdx.org/v3/Core/IntegrityMethod'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Core/hashValue', varname='httpsrdfspdxorgv3CorehashValue', comment='The result of applying a hash algorithm to an Element.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/packageVerificationCodeExcludedFile', varname='httpsrdfspdxorgv3CorepackageVerificationCodeExcludedFile', comment='The relative file name of a file to be excluded from the `PackageVerificationCode`.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='An SPDX version 2.X compatible verification method for software packages.')
Class(_id='https://rdf.spdx.org/v3/Core/PositiveIntegerRange', clsname='https_rdfspdxorgv3CorePositiveIntegerRange', parent_ids=[], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Core/beginIntegerRange', varname='httpsrdfspdxorgv3CorebeginIntegerRange', comment='Defines the beginning of a range.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#positiveInteger'), Property(path='https://rdf.spdx.org/v3/Core/endIntegerRange', varname='httpsrdfspdxorgv3CoreendIntegerRange', comment='Defines the end of a range.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#positiveInteger')], comment='A tuple of two positive integers that define a range.')
Class(_id='https://rdf.spdx.org/v3/Core/Relationship', clsname='https_rdfspdxorgv3CoreRelationship', parent_ids=['https://rdf.spdx.org/v3/Core/Element'], derived_ids=['https://rdf.spdx.org/v3/Core/LifecycleScopedRelationship', 'https://rdf.spdx.org/v3/Security/VulnAssessmentRelationship'], properties=[Property(path='https://rdf.spdx.org/v3/Core/from', varname='httpsrdfspdxorgv3Corefrom', comment='References the Element on the left-hand side of a relationship.', max_count=1, min_count=1, enum_id='', class_id='https://rdf.spdx.org/v3/Core/Element', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/to', varname='httpsrdfspdxorgv3Coreto', comment='References an Element on the right-hand side of a relationship.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/Element', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/relationshipType', varname='httpsrdfspdxorgv3CorerelationshipType', comment='Information about the relationship between two Elements.', max_count=1, min_count=1, enum_id='https://rdf.spdx.org/v3/Core/RelationshipType', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/completeness', varname='httpsrdfspdxorgv3Corecompleteness', comment='Provides information about the completeness of relationships.', max_count=1, min_count=None, enum_id='https://rdf.spdx.org/v3/Core/RelationshipCompleteness', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/startTime', varname='httpsrdfspdxorgv3CorestartTime', comment='Specifies the time from which an element is applicable / valid.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/endTime', varname='httpsrdfspdxorgv3CoreendTime', comment='Specifies the time from which an element is no longer applicable / valid.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='Describes a relationship between one or more elements.')
Class(_id='https://rdf.spdx.org/v3/Core/SpdxDocument', clsname='https_rdfspdxorgv3CoreSpdxDocument', parent_ids=['https://rdf.spdx.org/v3/Core/ElementCollection'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Core/imports', varname='httpsrdfspdxorgv3Coreimports', comment='Provides an ExternalMap of Element identifiers.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/ExternalMap', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/namespaceMap', varname='httpsrdfspdxorgv3CorenamespaceMap', comment='Provides a NamespaceMap of prefixes and associated namespace partial URIs applicable to an SpdxDocument and independent of any specific serialization format or instance.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/NamespaceMap', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/dataLicense', varname='httpsrdfspdxorgv3CoredataLicense', comment='Provides the license under which the SPDX documentation of the Element can be used.', max_count=1, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/SimpleLicensing/AnyLicenseInfo', datatype='')], comment='A collection of SPDX Elements that could potentially be serialized.')
Class(_id='https://rdf.spdx.org/v3/Core/Tool', clsname='https_rdfspdxorgv3CoreTool', parent_ids=['https://rdf.spdx.org/v3/Core/Element'], derived_ids=[], properties=[], comment='An element of hardware and/or software utilized to carry out a particular function.')
Class(_id='https://rdf.spdx.org/v3/ExpandedLicensing/LicenseAddition', clsname='https_rdfspdxorgv3ExpandedLicensingLicenseAddition', parent_ids=['https://rdf.spdx.org/v3/Core/Element'], derived_ids=['https://rdf.spdx.org/v3/ExpandedLicensing/CustomLicenseAddition', 'https://rdf.spdx.org/v3/ExpandedLicensing/ListedLicenseException'], properties=[Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/additionText', varname='httpsrdfspdxorgv3ExpandedLicensingadditionText', comment='Identifies the full text of a LicenseAddition.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/standardAdditionTemplate', varname='httpsrdfspdxorgv3ExpandedLicensingstandardAdditionTemplate', comment='Identifies the full text of a LicenseAddition, in SPDX templating format.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/isDeprecatedAdditionId', varname='httpsrdfspdxorgv3ExpandedLicensingisDeprecatedAdditionId', comment='Specifies whether an additional text identifier has been marked as deprecated.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#boolean'), Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/obsoletedBy', varname='httpsrdfspdxorgv3ExpandedLicensingobsoletedBy', comment='Specifies the licenseId that is preferred to be used in place of a deprecated\nLicense or LicenseAddition.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/licenseXml', varname='httpsrdfspdxorgv3ExpandedLicensinglicenseXml', comment='Identifies all the text and metadata associated with a license in the license XML format.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/seeAlso', varname='httpsrdfspdxorgv3ExpandedLicensingseeAlso', comment='Contains a URL where the License or LicenseAddition can be found in use.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#anyURI')], comment='Abstract class for additional text intended to be added to a License, but\nwhich is not itself a standalone License.')
Class(_id='https://rdf.spdx.org/v3/ExpandedLicensing/ListedLicenseException', clsname='https_rdfspdxorgv3ExpandedLicensingListedLicenseException', parent_ids=['https://rdf.spdx.org/v3/ExpandedLicensing/LicenseAddition'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/listVersionAdded', varname='httpsrdfspdxorgv3ExpandedLicensinglistVersionAdded', comment='Specifies the SPDX License List version in which this ListedLicense or\nListedLicenseException identifier was first added.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/deprecatedVersion', varname='httpsrdfspdxorgv3ExpandedLicensingdeprecatedVersion', comment='Specifies the SPDX License List version in which this license or exception\nidentifier was deprecated.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='A license exception that is listed on the SPDX Exceptions list.')
Class(_id='https://rdf.spdx.org/v3/Extension/Extension', clsname='https_rdfspdxorgv3ExtensionExtension', parent_ids=[], derived_ids=[], properties=[], comment='A characterization of some aspect of an Element that is associated with the Element in a generalized fashion.')
Class(_id='https://rdf.spdx.org/v3/Security/VulnAssessmentRelationship', clsname='https_rdfspdxorgv3SecurityVulnAssessmentRelationship', parent_ids=['https://rdf.spdx.org/v3/Core/Relationship'], derived_ids=['https://rdf.spdx.org/v3/Security/CvssV2VulnAssessmentRelationship', 'https://rdf.spdx.org/v3/Security/CvssV3VulnAssessmentRelationship', 'https://rdf.spdx.org/v3/Security/CvssV4VulnAssessmentRelationship', 'https://rdf.spdx.org/v3/Security/EpssVulnAssessmentRelationship', 'https://rdf.spdx.org/v3/Security/ExploitCatalogVulnAssessmentRelationship', 'https://rdf.spdx.org/v3/Security/SsvcVulnAssessmentRelationship', 'https://rdf.spdx.org/v3/Security/VexVulnAssessmentRelationship'], properties=[Property(path='https://rdf.spdx.org/v3/Security/assessedElement', varname='httpsrdfspdxorgv3SecurityassessedElement', comment='Specifies an element contained in a piece of software where a vulnerability was\nfound.', max_count=1, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/Element', datatype=''), Property(path='https://rdf.spdx.org/v3/Security/publishedTime', varname='httpsrdfspdxorgv3SecuritypublishedTime', comment='Specifies the time when a vulnerability was published.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/suppliedBy', varname='httpsrdfspdxorgv3CoresuppliedBy', comment='Identifies who or what supplied the artifact or VulnAssessmentRelationship referenced by the Element.', max_count=1, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/Agent', datatype=''), Property(path='https://rdf.spdx.org/v3/Security/modifiedTime', varname='httpsrdfspdxorgv3SecuritymodifiedTime', comment='Specifies a time when a vulnerability assessment was modified', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Security/withdrawnTime', varname='httpsrdfspdxorgv3SecuritywithdrawnTime', comment='Specified the time and date when a vulnerability was withdrawn.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='Abstract ancestor class for all vulnerability assessments')
Class(_id='https://rdf.spdx.org/v3/SimpleLicensing/AnyLicenseInfo', clsname='https_rdfspdxorgv3SimpleLicensingAnyLicenseInfo', parent_ids=['https://rdf.spdx.org/v3/Core/Element'], derived_ids=['https://rdf.spdx.org/v3/ExpandedLicensing/ConjunctiveLicenseSet', 'https://rdf.spdx.org/v3/ExpandedLicensing/DisjunctiveLicenseSet', 'https://rdf.spdx.org/v3/ExpandedLicensing/ExtendableLicense', 'https://rdf.spdx.org/v3/ExpandedLicensing/IndividualLicensingInfo', 'https://rdf.spdx.org/v3/ExpandedLicensing/WithAdditionOperator', 'https://rdf.spdx.org/v3/SimpleLicensing/LicenseExpression'], properties=[], comment='Abstract class representing a license combination consisting of one or more\nlicenses (optionally including additional text), which may be combined\naccording to the SPDX license expression syntax.')
Class(_id='https://rdf.spdx.org/v3/SimpleLicensing/LicenseExpression', clsname='https_rdfspdxorgv3SimpleLicensingLicenseExpression', parent_ids=['https://rdf.spdx.org/v3/SimpleLicensing/AnyLicenseInfo'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/SimpleLicensing/licenseExpression', varname='httpsrdfspdxorgv3SimpleLicensinglicenseExpression', comment='A string in the license expression format.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/SimpleLicensing/licenseListVersion', varname='httpsrdfspdxorgv3SimpleLicensinglicenseListVersion', comment='The version of the SPDX License List used in the license expression.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/SimpleLicensing/customIdToUri', varname='httpsrdfspdxorgv3SimpleLicensingcustomIdToUri', comment='Maps a LicenseRef or AdditionRef string for a Custom License or a Custom License Addition to its URI ID.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/DictionaryEntry', datatype='')], comment='An SPDX Element containing an SPDX license expression string.')
Class(_id='https://rdf.spdx.org/v3/SimpleLicensing/SimpleLicensingText', clsname='https_rdfspdxorgv3SimpleLicensingSimpleLicensingText', parent_ids=['https://rdf.spdx.org/v3/Core/Element'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/SimpleLicensing/licenseText', varname='httpsrdfspdxorgv3SimpleLicensinglicenseText', comment='Identifies the full text of a License or Addition.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='A license or addition that is not listed on the SPDX License List.')
Class(_id='https://rdf.spdx.org/v3/Build/Build', clsname='https_rdfspdxorgv3BuildBuild', parent_ids=['https://rdf.spdx.org/v3/Core/Element'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Build/buildType', varname='httpsrdfspdxorgv3BuildbuildType', comment='A buildType is a hint that is used to indicate the toolchain, platform, or infrastructure that the build was invoked on.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#anyURI'), Property(path='https://rdf.spdx.org/v3/Build/buildId', varname='httpsrdfspdxorgv3BuildbuildId', comment='A buildId is a locally unique identifier used by a builder to identify a unique instance of a build produced by it.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Build/configSourceEntrypoint', varname='httpsrdfspdxorgv3BuildconfigSourceEntrypoint', comment='Property describes the invocation entrypoint of a build.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Build/configSourceUri', varname='httpsrdfspdxorgv3BuildconfigSourceUri', comment='Property that describes the URI of the build configuration source file.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#anyURI'), Property(path='https://rdf.spdx.org/v3/Build/configSourceDigest', varname='httpsrdfspdxorgv3BuildconfigSourceDigest', comment='Property that describes the digest of the build configuration file used to invoke a build.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/Hash', datatype=''), Property(path='https://rdf.spdx.org/v3/Build/parameters', varname='httpsrdfspdxorgv3Buildparameters', comment='Property describing the parameters used in an instance of a build.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/DictionaryEntry', datatype=''), Property(path='https://rdf.spdx.org/v3/Build/buildStartTime', varname='httpsrdfspdxorgv3BuildbuildStartTime', comment='Property describing the start time of a build.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Build/buildEndTime', varname='httpsrdfspdxorgv3BuildbuildEndTime', comment='Property that describes the time at which a build stops.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Build/environment', varname='httpsrdfspdxorgv3Buildenvironment', comment='Property describing the session in which a build is invoked.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/DictionaryEntry', datatype='')], comment='Class that describes a build instance of software/artifacts.')
Class(_id='https://rdf.spdx.org/v3/Core/Agent', clsname='https_rdfspdxorgv3CoreAgent', parent_ids=['https://rdf.spdx.org/v3/Core/Element'], derived_ids=['https://rdf.spdx.org/v3/Core/Organization', 'https://rdf.spdx.org/v3/Core/Person', 'https://rdf.spdx.org/v3/Core/SoftwareAgent'], properties=[], comment='Agent represents anything with the potential to act on a system.')
Class(_id='https://rdf.spdx.org/v3/Core/Annotation', clsname='https_rdfspdxorgv3CoreAnnotation', parent_ids=['https://rdf.spdx.org/v3/Core/Element'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Core/annotationType', varname='httpsrdfspdxorgv3CoreannotationType', comment='Describes the type of annotation.', max_count=1, min_count=1, enum_id='https://rdf.spdx.org/v3/Core/AnnotationType', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/contentType', varname='httpsrdfspdxorgv3CorecontentType', comment='Specifies the media type of an Element or Property.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/statement', varname='httpsrdfspdxorgv3Corestatement', comment='Commentary on an assertion that an annotator has made.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/subject', varname='httpsrdfspdxorgv3Coresubject', comment='An Element an annotator has made an assertion about.', max_count=1, min_count=1, enum_id='', class_id='https://rdf.spdx.org/v3/Core/Element', datatype='')], comment='An assertion made in relation to one or more elements.')
Class(_id='https://rdf.spdx.org/v3/Core/Artifact', clsname='https_rdfspdxorgv3CoreArtifact', parent_ids=['https://rdf.spdx.org/v3/Core/Element'], derived_ids=['https://rdf.spdx.org/v3/Security/Vulnerability', 'https://rdf.spdx.org/v3/Software/SoftwareArtifact'], properties=[Property(path='https://rdf.spdx.org/v3/Core/originatedBy', varname='httpsrdfspdxorgv3CoreoriginatedBy', comment='Identifies from where or whom the Element originally came.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/Agent', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/suppliedBy', varname='httpsrdfspdxorgv3CoresuppliedBy', comment='Identifies who or what supplied the artifact or VulnAssessmentRelationship referenced by the Element.', max_count=1, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/Agent', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/builtTime', varname='httpsrdfspdxorgv3CorebuiltTime', comment='Specifies the time an artifact was built.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/releaseTime', varname='httpsrdfspdxorgv3CorereleaseTime', comment='Specifies the time an artifact was released.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/validUntilTime', varname='httpsrdfspdxorgv3CorevalidUntilTime', comment='Specifies until when the artifact can be used before its usage needs to be reassessed.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/standardName', varname='httpsrdfspdxorgv3CorestandardName', comment='The name of a relevant standard that may apply to an artifact.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Core/supportLevel', varname='httpsrdfspdxorgv3CoresupportLevel', comment='Specifies the level of support associated with an artifact.', max_count=None, min_count=None, enum_id='https://rdf.spdx.org/v3/Core/SupportType', class_id='', datatype='')], comment='A distinct article or unit within the digital domain.')
Class(_id='https://rdf.spdx.org/v3/Core/Bundle', clsname='https_rdfspdxorgv3CoreBundle', parent_ids=['https://rdf.spdx.org/v3/Core/ElementCollection'], derived_ids=['https://rdf.spdx.org/v3/Core/Bom'], properties=[Property(path='https://rdf.spdx.org/v3/Core/context', varname='httpsrdfspdxorgv3Corecontext', comment='Gives information about the circumstances or unifying properties\nthat Elements of the bundle have been assembled under.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='A collection of Elements that have a shared context.')
Class(_id='https://rdf.spdx.org/v3/Core/Hash', clsname='https_rdfspdxorgv3CoreHash', parent_ids=['https://rdf.spdx.org/v3/Core/IntegrityMethod'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Core/algorithm', varname='httpsrdfspdxorgv3Corealgorithm', comment='Specifies the algorithm used for calculating the hash value.', max_count=1, min_count=1, enum_id='https://rdf.spdx.org/v3/Core/HashAlgorithm', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/Core/hashValue', varname='httpsrdfspdxorgv3CorehashValue', comment='The result of applying a hash algorithm to an Element.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='A mathematically calculated representation of a grouping of data.')
Class(_id='https://rdf.spdx.org/v3/Core/LifecycleScopedRelationship', clsname='https_rdfspdxorgv3CoreLifecycleScopedRelationship', parent_ids=['https://rdf.spdx.org/v3/Core/Relationship'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Core/scope', varname='httpsrdfspdxorgv3Corescope', comment='Capture the scope of information about a specific relationship between elements.', max_count=1, min_count=None, enum_id='https://rdf.spdx.org/v3/Core/LifecycleScopeType', class_id='', datatype='')], comment='Provide context for a relationship that occurs in the software lifecycle.')
Class(_id='https://rdf.spdx.org/v3/Core/Organization', clsname='https_rdfspdxorgv3CoreOrganization', parent_ids=['https://rdf.spdx.org/v3/Core/Agent'], derived_ids=[], properties=[], comment='A group of people who work together in an organized way for a shared purpose.')
Class(_id='https://rdf.spdx.org/v3/Core/Person', clsname='https_rdfspdxorgv3CorePerson', parent_ids=['https://rdf.spdx.org/v3/Core/Agent'], derived_ids=[], properties=[], comment='An individual human being.')
Class(_id='https://rdf.spdx.org/v3/Core/SoftwareAgent', clsname='https_rdfspdxorgv3CoreSoftwareAgent', parent_ids=['https://rdf.spdx.org/v3/Core/Agent'], derived_ids=[], properties=[], comment='A software agent.')
Class(_id='https://rdf.spdx.org/v3/ExpandedLicensing/ConjunctiveLicenseSet', clsname='https_rdfspdxorgv3ExpandedLicensingConjunctiveLicenseSet', parent_ids=['https://rdf.spdx.org/v3/SimpleLicensing/AnyLicenseInfo'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/member', varname='httpsrdfspdxorgv3ExpandedLicensingmember', comment='A license expression participating in a license set.', max_count=None, min_count=2, enum_id='', class_id='https://rdf.spdx.org/v3/SimpleLicensing/AnyLicenseInfo', datatype='')], comment='Portion of an AnyLicenseInfo representing a set of licensing information\nwhere all elements apply.')
Class(_id='https://rdf.spdx.org/v3/ExpandedLicensing/CustomLicenseAddition', clsname='https_rdfspdxorgv3ExpandedLicensingCustomLicenseAddition', parent_ids=['https://rdf.spdx.org/v3/ExpandedLicensing/LicenseAddition'], derived_ids=[], properties=[], comment='A license addition that is not listed on the SPDX Exceptions List.')
Class(_id='https://rdf.spdx.org/v3/ExpandedLicensing/DisjunctiveLicenseSet', clsname='https_rdfspdxorgv3ExpandedLicensingDisjunctiveLicenseSet', parent_ids=['https://rdf.spdx.org/v3/SimpleLicensing/AnyLicenseInfo'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/member', varname='httpsrdfspdxorgv3ExpandedLicensingmember', comment='A license expression participating in a license set.', max_count=None, min_count=2, enum_id='', class_id='https://rdf.spdx.org/v3/SimpleLicensing/AnyLicenseInfo', datatype='')], comment='Portion of an AnyLicenseInfo representing a set of licensing information\nwhere only any one of the elements applies.')
Class(_id='https://rdf.spdx.org/v3/ExpandedLicensing/ExtendableLicense', clsname='https_rdfspdxorgv3ExpandedLicensingExtendableLicense', parent_ids=['https://rdf.spdx.org/v3/SimpleLicensing/AnyLicenseInfo'], derived_ids=['https://rdf.spdx.org/v3/ExpandedLicensing/License', 'https://rdf.spdx.org/v3/ExpandedLicensing/OrLaterOperator'], properties=[], comment='Abstract class representing a License or an OrLaterOperator.')
Class(_id='https://rdf.spdx.org/v3/ExpandedLicensing/IndividualLicensingInfo', clsname='https_rdfspdxorgv3ExpandedLicensingIndividualLicensingInfo', parent_ids=['https://rdf.spdx.org/v3/SimpleLicensing/AnyLicenseInfo'], derived_ids=[], properties=[], comment='A concrete subclass of AnyLicenseInfo used by Individuals in the ExpandedLicensing profile.')
Class(_id='https://rdf.spdx.org/v3/ExpandedLicensing/License', clsname='https_rdfspdxorgv3ExpandedLicensingLicense', parent_ids=['https://rdf.spdx.org/v3/ExpandedLicensing/ExtendableLicense'], derived_ids=['https://rdf.spdx.org/v3/ExpandedLicensing/CustomLicense', 'https://rdf.spdx.org/v3/ExpandedLicensing/ListedLicense'], properties=[Property(path='https://rdf.spdx.org/v3/SimpleLicensing/licenseText', varname='httpsrdfspdxorgv3SimpleLicensinglicenseText', comment='Identifies the full text of a License or Addition.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/isOsiApproved', varname='httpsrdfspdxorgv3ExpandedLicensingisOsiApproved', comment='Specifies whether the License is listed as approved by the\n[Open Source Initiative (OSI)](https://opensource.org).', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#boolean'), Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/isFsfLibre', varname='httpsrdfspdxorgv3ExpandedLicensingisFsfLibre', comment='Specifies whether the License is listed as free by the\n[Free Software Foundation (FSF)](https://fsf.org).', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#boolean'), Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/standardLicenseHeader', varname='httpsrdfspdxorgv3ExpandedLicensingstandardLicenseHeader', comment="Provides a License author's preferred text to indicate that a file is covered\nby the License.", max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/standardLicenseTemplate', varname='httpsrdfspdxorgv3ExpandedLicensingstandardLicenseTemplate', comment='Identifies the full text of a License, in SPDX templating format.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/isDeprecatedLicenseId', varname='httpsrdfspdxorgv3ExpandedLicensingisDeprecatedLicenseId', comment='Specifies whether a license or additional text identifier has been marked as\ndeprecated.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#boolean'), Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/obsoletedBy', varname='httpsrdfspdxorgv3ExpandedLicensingobsoletedBy', comment='Specifies the licenseId that is preferred to be used in place of a deprecated\nLicense or LicenseAddition.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/licenseXml', varname='httpsrdfspdxorgv3ExpandedLicensinglicenseXml', comment='Identifies all the text and metadata associated with a license in the license XML format.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/seeAlso', varname='httpsrdfspdxorgv3ExpandedLicensingseeAlso', comment='Contains a URL where the License or LicenseAddition can be found in use.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#anyURI')], comment='Abstract class for the portion of an AnyLicenseInfo representing a license.')
Class(_id='https://rdf.spdx.org/v3/ExpandedLicensing/ListedLicense', clsname='https_rdfspdxorgv3ExpandedLicensingListedLicense', parent_ids=['https://rdf.spdx.org/v3/ExpandedLicensing/License'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/listVersionAdded', varname='httpsrdfspdxorgv3ExpandedLicensinglistVersionAdded', comment='Specifies the SPDX License List version in which this ListedLicense or\nListedLicenseException identifier was first added.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/deprecatedVersion', varname='httpsrdfspdxorgv3ExpandedLicensingdeprecatedVersion', comment='Specifies the SPDX License List version in which this license or exception\nidentifier was deprecated.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='A license that is listed on the SPDX License List.')
Class(_id='https://rdf.spdx.org/v3/ExpandedLicensing/OrLaterOperator', clsname='https_rdfspdxorgv3ExpandedLicensingOrLaterOperator', parent_ids=['https://rdf.spdx.org/v3/ExpandedLicensing/ExtendableLicense'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/subjectLicense', varname='httpsrdfspdxorgv3ExpandedLicensingsubjectLicense', comment="A License participating in an 'or later' model.", max_count=1, min_count=1, enum_id='', class_id='https://rdf.spdx.org/v3/ExpandedLicensing/License', datatype='')], comment='Portion of an AnyLicenseInfo representing this version, or any later version,\nof the indicated License.')
Class(_id='https://rdf.spdx.org/v3/ExpandedLicensing/WithAdditionOperator', clsname='https_rdfspdxorgv3ExpandedLicensingWithAdditionOperator', parent_ids=['https://rdf.spdx.org/v3/SimpleLicensing/AnyLicenseInfo'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/subjectExtendableLicense', varname='httpsrdfspdxorgv3ExpandedLicensingsubjectExtendableLicense', comment="A License participating in a 'with addition' model.", max_count=1, min_count=1, enum_id='', class_id='https://rdf.spdx.org/v3/ExpandedLicensing/ExtendableLicense', datatype=''), Property(path='https://rdf.spdx.org/v3/ExpandedLicensing/subjectAddition', varname='httpsrdfspdxorgv3ExpandedLicensingsubjectAddition', comment="A LicenseAddition participating in a 'with addition' model.", max_count=1, min_count=1, enum_id='', class_id='https://rdf.spdx.org/v3/ExpandedLicensing/LicenseAddition', datatype='')], comment='Portion of an AnyLicenseInfo representing a License which has additional\ntext applied to it.')
Class(_id='https://rdf.spdx.org/v3/Security/CvssV2VulnAssessmentRelationship', clsname='https_rdfspdxorgv3SecurityCvssV2VulnAssessmentRelationship', parent_ids=['https://rdf.spdx.org/v3/Security/VulnAssessmentRelationship'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Security/score', varname='httpsrdfspdxorgv3Securityscore', comment='Provides a numerical (0-10) representation of the severity of a vulnerability.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#decimal'), Property(path='https://rdf.spdx.org/v3/Security/vectorString', varname='httpsrdfspdxorgv3SecurityvectorString', comment='Specifies the CVSS vector string for a vulnerability.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='Provides a CVSS version 2.0 assessment for a vulnerability.')
Class(_id='https://rdf.spdx.org/v3/Security/CvssV3VulnAssessmentRelationship', clsname='https_rdfspdxorgv3SecurityCvssV3VulnAssessmentRelationship', parent_ids=['https://rdf.spdx.org/v3/Security/VulnAssessmentRelationship'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Security/score', varname='httpsrdfspdxorgv3Securityscore', comment='Provides a numerical (0-10) representation of the severity of a vulnerability.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#decimal'), Property(path='https://rdf.spdx.org/v3/Security/severity', varname='httpsrdfspdxorgv3Securityseverity', comment='Specifies the CVSS qualitative severity rating of a vulnerability in relation to a piece of software.', max_count=1, min_count=1, enum_id='https://rdf.spdx.org/v3/Security/CvssSeverityType', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/Security/vectorString', varname='httpsrdfspdxorgv3SecurityvectorString', comment='Specifies the CVSS vector string for a vulnerability.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='Provides a CVSS version 3 assessment for a vulnerability.')
Class(_id='https://rdf.spdx.org/v3/Security/CvssV4VulnAssessmentRelationship', clsname='https_rdfspdxorgv3SecurityCvssV4VulnAssessmentRelationship', parent_ids=['https://rdf.spdx.org/v3/Security/VulnAssessmentRelationship'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Security/score', varname='httpsrdfspdxorgv3Securityscore', comment='Provides a numerical (0-10) representation of the severity of a vulnerability.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#decimal'), Property(path='https://rdf.spdx.org/v3/Security/severity', varname='httpsrdfspdxorgv3Securityseverity', comment='Specifies the CVSS qualitative severity rating of a vulnerability in relation to a piece of software.', max_count=1, min_count=1, enum_id='https://rdf.spdx.org/v3/Security/CvssSeverityType', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/Security/vectorString', varname='httpsrdfspdxorgv3SecurityvectorString', comment='Specifies the CVSS vector string for a vulnerability.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='Provides a CVSS version 4 assessment for a vulnerability.')
Class(_id='https://rdf.spdx.org/v3/Security/EpssVulnAssessmentRelationship', clsname='https_rdfspdxorgv3SecurityEpssVulnAssessmentRelationship', parent_ids=['https://rdf.spdx.org/v3/Security/VulnAssessmentRelationship'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Security/probability', varname='httpsrdfspdxorgv3Securityprobability', comment='A probability score between 0 and 1 of a vulnerability being exploited.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#decimal'), Property(path='https://rdf.spdx.org/v3/Security/percentile', varname='httpsrdfspdxorgv3Securitypercentile', comment='The percentile of the current probability score.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#decimal'), Property(path='https://rdf.spdx.org/v3/Security/publishedTime', varname='httpsrdfspdxorgv3SecuritypublishedTime', comment='Specifies the time when a vulnerability was published.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='Provides an EPSS assessment for a vulnerability.')
Class(_id='https://rdf.spdx.org/v3/Security/ExploitCatalogVulnAssessmentRelationship', clsname='https_rdfspdxorgv3SecurityExploitCatalogVulnAssessmentRelationship', parent_ids=['https://rdf.spdx.org/v3/Security/VulnAssessmentRelationship'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Security/catalogType', varname='httpsrdfspdxorgv3SecuritycatalogType', comment='Specifies the exploit catalog type.', max_count=1, min_count=1, enum_id='https://rdf.spdx.org/v3/Security/ExploitCatalogType', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/Security/exploited', varname='httpsrdfspdxorgv3Securityexploited', comment="Describe that a CVE is known to have an exploit because it's been listed in an exploit catalog.", max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#boolean'), Property(path='https://rdf.spdx.org/v3/Security/locator', varname='httpsrdfspdxorgv3Securitylocator', comment='Provides the location of an exploit catalog.', max_count=1, min_count=1, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#anyURI')], comment='Provides an exploit assessment of a vulnerability.')
Class(_id='https://rdf.spdx.org/v3/Security/SsvcVulnAssessmentRelationship', clsname='https_rdfspdxorgv3SecuritySsvcVulnAssessmentRelationship', parent_ids=['https://rdf.spdx.org/v3/Security/VulnAssessmentRelationship'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Security/decisionType', varname='httpsrdfspdxorgv3SecuritydecisionType', comment='Provide the enumeration of possible decisions in the Stakeholder-Specific Vulnerability Categorization (SSVC) decision tree [https://www.cisa.gov/sites/default/files/publications/cisa-ssvc-guide%20508c.pdf](https://www.cisa.gov/sites/default/files/publications/cisa-ssvc-guide%20508c.pdf)', max_count=1, min_count=1, enum_id='https://rdf.spdx.org/v3/Security/SsvcDecisionType', class_id='', datatype='')], comment='Provides an SSVC assessment for a vulnerability.')
Class(_id='https://rdf.spdx.org/v3/Security/VexVulnAssessmentRelationship', clsname='https_rdfspdxorgv3SecurityVexVulnAssessmentRelationship', parent_ids=['https://rdf.spdx.org/v3/Security/VulnAssessmentRelationship'], derived_ids=['https://rdf.spdx.org/v3/Security/VexAffectedVulnAssessmentRelationship', 'https://rdf.spdx.org/v3/Security/VexFixedVulnAssessmentRelationship', 'https://rdf.spdx.org/v3/Security/VexNotAffectedVulnAssessmentRelationship', 'https://rdf.spdx.org/v3/Security/VexUnderInvestigationVulnAssessmentRelationship'], properties=[Property(path='https://rdf.spdx.org/v3/Security/vexVersion', varname='httpsrdfspdxorgv3SecurityvexVersion', comment='Specifies the version of the VEX document.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Security/statusNotes', varname='httpsrdfspdxorgv3SecuritystatusNotes', comment='Conveys information about how VEX status was determined.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='Asbtract ancestor class for all VEX relationships')
Class(_id='https://rdf.spdx.org/v3/Security/Vulnerability', clsname='https_rdfspdxorgv3SecurityVulnerability', parent_ids=['https://rdf.spdx.org/v3/Core/Artifact'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Security/publishedTime', varname='httpsrdfspdxorgv3SecuritypublishedTime', comment='Specifies the time when a vulnerability was published.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Security/modifiedTime', varname='httpsrdfspdxorgv3SecuritymodifiedTime', comment='Specifies a time when a vulnerability assessment was modified', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Security/withdrawnTime', varname='httpsrdfspdxorgv3SecuritywithdrawnTime', comment='Specified the time and date when a vulnerability was withdrawn.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='Specifies a vulnerability and its associated information.')
Class(_id='https://rdf.spdx.org/v3/Software/SoftwareArtifact', clsname='https_rdfspdxorgv3SoftwareSoftwareArtifact', parent_ids=['https://rdf.spdx.org/v3/Core/Artifact'], derived_ids=['https://rdf.spdx.org/v3/Software/File', 'https://rdf.spdx.org/v3/Software/Package', 'https://rdf.spdx.org/v3/Software/Snippet'], properties=[Property(path='https://rdf.spdx.org/v3/Software/gitoid', varname='httpsrdfspdxorgv3Softwaregitoid', comment='Used to record the artifact’s gitoid: a canonical, unique, immutable identifier that can be used for software integrity verification.', max_count=2, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#anyURI'), Property(path='https://rdf.spdx.org/v3/Software/primaryPurpose', varname='httpsrdfspdxorgv3SoftwareprimaryPurpose', comment='Provides information about the primary purpose of the software artifact.', max_count=1, min_count=None, enum_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/Software/additionalPurpose', varname='httpsrdfspdxorgv3SoftwareadditionalPurpose', comment='Provides additional purpose information of the software artifact.', max_count=None, min_count=None, enum_id='https://rdf.spdx.org/v3/Software/SoftwarePurpose', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/Software/copyrightText', varname='httpsrdfspdxorgv3SoftwarecopyrightText', comment='Identifies the text of one or more copyright notices for a software Package,\nFile or Snippet, if any.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Software/attributionText', varname='httpsrdfspdxorgv3SoftwareattributionText', comment='Provides a place for the SPDX data creator to record acknowledgement text for\na software Package, File or Snippet.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='A distinct article or unit related to Software.')
Class(_id='https://rdf.spdx.org/v3/Core/Bom', clsname='https_rdfspdxorgv3CoreBom', parent_ids=['https://rdf.spdx.org/v3/Core/Bundle'], derived_ids=['https://rdf.spdx.org/v3/Software/Sbom'], properties=[], comment='A container for a grouping of SPDX-3.0 content characterizing details\n(provenence, composition, licensing, etc.) about a product.')
Class(_id='https://rdf.spdx.org/v3/ExpandedLicensing/CustomLicense', clsname='https_rdfspdxorgv3ExpandedLicensingCustomLicense', parent_ids=['https://rdf.spdx.org/v3/ExpandedLicensing/License'], derived_ids=[], properties=[], comment='A license that is not listed on the SPDX License List.')
Class(_id='https://rdf.spdx.org/v3/Security/VexAffectedVulnAssessmentRelationship', clsname='https_rdfspdxorgv3SecurityVexAffectedVulnAssessmentRelationship', parent_ids=['https://rdf.spdx.org/v3/Security/VexVulnAssessmentRelationship'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Security/actionStatement', varname='httpsrdfspdxorgv3SecurityactionStatement', comment='Provides advise on how to mitigate or remediate a vulnerability when a VEX product\nis affected by it.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Security/actionStatementTime', varname='httpsrdfspdxorgv3SecurityactionStatementTime', comment='Records the time when a recommended action was communicated in a VEX statement \nto mitigate a vulnerability.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='Connects a vulnerability and an element designating the element as a product\naffected by the vulnerability.')
Class(_id='https://rdf.spdx.org/v3/Security/VexFixedVulnAssessmentRelationship', clsname='https_rdfspdxorgv3SecurityVexFixedVulnAssessmentRelationship', parent_ids=['https://rdf.spdx.org/v3/Security/VexVulnAssessmentRelationship'], derived_ids=[], properties=[], comment='Links a vulnerability and elements representing products (in the VEX sense) where\na fix has been applied and are no longer affected.')
Class(_id='https://rdf.spdx.org/v3/Security/VexNotAffectedVulnAssessmentRelationship', clsname='https_rdfspdxorgv3SecurityVexNotAffectedVulnAssessmentRelationship', parent_ids=['https://rdf.spdx.org/v3/Security/VexVulnAssessmentRelationship'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Security/justificationType', varname='httpsrdfspdxorgv3SecurityjustificationType', comment='Impact justification label to be used when linking a vulnerability to an element\nrepresenting a VEX product with a VexNotAffectedVulnAssessmentRelationship\nrelationship.', max_count=1, min_count=None, enum_id='https://rdf.spdx.org/v3/Security/VexJustificationType', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/Security/impactStatement', varname='httpsrdfspdxorgv3SecurityimpactStatement', comment='Explains why a VEX product is not affected by a vulnerability. It is an\nalternative in VexNotAffectedVulnAssessmentRelationship to the machine-readable\njustification label.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Security/impactStatementTime', varname='httpsrdfspdxorgv3SecurityimpactStatementTime', comment='Timestamp of impact statement.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='Links a vulnerability and one or more elements designating the latter as products\nnot affected by the vulnerability.')
Class(_id='https://rdf.spdx.org/v3/Security/VexUnderInvestigationVulnAssessmentRelationship', clsname='https_rdfspdxorgv3SecurityVexUnderInvestigationVulnAssessmentRelationship', parent_ids=['https://rdf.spdx.org/v3/Security/VexVulnAssessmentRelationship'], derived_ids=[], properties=[], comment='Designates elements as products where the impact of a vulnerability is being\ninvestigated.')
Class(_id='https://rdf.spdx.org/v3/Software/File', clsname='https_rdfspdxorgv3SoftwareFile', parent_ids=['https://rdf.spdx.org/v3/Software/SoftwareArtifact'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Software/contentType', varname='httpsrdfspdxorgv3SoftwarecontentType', comment='Provides information about the content type of an Element.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Software/isDirectory', varname='httpsrdfspdxorgv3SoftwareisDirectory', comment='If true, denotes the Element is a directory.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#boolean')], comment='Refers to any object that stores content on a computer.')
Class(_id='https://rdf.spdx.org/v3/Software/Package', clsname='https_rdfspdxorgv3SoftwarePackage', parent_ids=['https://rdf.spdx.org/v3/Software/SoftwareArtifact'], derived_ids=['https://rdf.spdx.org/v3/AI/AIPackage', 'https://rdf.spdx.org/v3/Dataset/Dataset'], properties=[Property(path='https://rdf.spdx.org/v3/Software/packageVersion', varname='httpsrdfspdxorgv3SoftwarepackageVersion', comment='Identify the version of a package.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Software/downloadLocation', varname='httpsrdfspdxorgv3SoftwaredownloadLocation', comment='Identifies the download Uniform Resource Identifier for the package at the time that the document was created.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#anyURI'), Property(path='https://rdf.spdx.org/v3/Software/packageUrl', varname='httpsrdfspdxorgv3SoftwarepackageUrl', comment='Provides a place for the SPDX data creator to record the package URL string (in accordance with the [package URL spec](https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst)) for a software Package.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#anyURI'), Property(path='https://rdf.spdx.org/v3/Software/homePage', varname='httpsrdfspdxorgv3SoftwarehomePage', comment="A place for the SPDX document creator to record a website that serves as the package's home page.", max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#anyURI'), Property(path='https://rdf.spdx.org/v3/Software/sourceInfo', varname='httpsrdfspdxorgv3SoftwaresourceInfo', comment='Records any relevant background information or additional comments\nabout the origin of the package.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string')], comment='Refers to any unit of content that can be associated with a distribution of software.')
Class(_id='https://rdf.spdx.org/v3/Software/Sbom', clsname='https_rdfspdxorgv3SoftwareSbom', parent_ids=['https://rdf.spdx.org/v3/Core/Bom'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Software/sbomType', varname='httpsrdfspdxorgv3SoftwaresbomType', comment='Provides information about the type of an SBOM.', max_count=None, min_count=None, enum_id='https://rdf.spdx.org/v3/Software/SbomType', class_id='', datatype='')], comment='A collection of SPDX Elements describing a single package.')
Class(_id='https://rdf.spdx.org/v3/Software/Snippet', clsname='https_rdfspdxorgv3SoftwareSnippet', parent_ids=['https://rdf.spdx.org/v3/Software/SoftwareArtifact'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Software/byteRange', varname='httpsrdfspdxorgv3SoftwarebyteRange', comment='Defines the byte range in the original host file that the snippet information applies to.', max_count=1, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/PositiveIntegerRange', datatype=''), Property(path='https://rdf.spdx.org/v3/Software/lineRange', varname='httpsrdfspdxorgv3SoftwarelineRange', comment='Defines the line range in the original host file that the snippet information applies to.', max_count=1, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/PositiveIntegerRange', datatype=''), Property(path='https://rdf.spdx.org/v3/Software/snippetFromFile', varname='httpsrdfspdxorgv3SoftwaresnippetFromFile', comment='Defines the original host file that the snippet information applies to.', max_count=1, min_count=1, enum_id='', class_id='https://rdf.spdx.org/v3/Software/File', datatype='')], comment='Describes a certain part of a file.')
Class(_id='https://rdf.spdx.org/v3/AI/AIPackage', clsname='https_rdfspdxorgv3AIAIPackage', parent_ids=['https://rdf.spdx.org/v3/Software/Package'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/AI/energyConsumption', varname='httpsrdfspdxorgv3AIenergyConsumption', comment='Indicates the amount of energy consumed to build the AI package.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/AI/standardCompliance', varname='httpsrdfspdxorgv3AIstandardCompliance', comment='Captures a standard that is being complied with.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/AI/limitation', varname='httpsrdfspdxorgv3AIlimitation', comment='Captures a limitation of the AI software.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/AI/typeOfModel', varname='httpsrdfspdxorgv3AItypeOfModel', comment='Records the type of the model used in the AI software.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/AI/informationAboutTraining', varname='httpsrdfspdxorgv3AIinformationAboutTraining', comment='Describes relevant information about different steps of the training process.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/AI/informationAboutApplication', varname='httpsrdfspdxorgv3AIinformationAboutApplication', comment='Provides relevant information about the AI software, not including the model description.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/AI/hyperparameter', varname='httpsrdfspdxorgv3AIhyperparameter', comment='Records a hyperparameter used to build the AI model contained in the AI package.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/DictionaryEntry', datatype=''), Property(path='https://rdf.spdx.org/v3/AI/modelDataPreprocessing', varname='httpsrdfspdxorgv3AImodelDataPreprocessing', comment='Describes all the preprocessing steps applied to the training data before the model training.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/AI/modelExplainability', varname='httpsrdfspdxorgv3AImodelExplainability', comment='Describes methods that can be used to explain the model.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/AI/sensitivePersonalInformation', varname='httpsrdfspdxorgv3AIsensitivePersonalInformation', comment='Records if sensitive personal information is used during model training.', max_count=1, min_count=None, enum_id='https://rdf.spdx.org/v3/Core/PresenceType', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/AI/metricDecisionThreshold', varname='httpsrdfspdxorgv3AImetricDecisionThreshold', comment='Captures the threshold that was used for computation of a metric described in the metric field.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/DictionaryEntry', datatype=''), Property(path='https://rdf.spdx.org/v3/AI/metric', varname='httpsrdfspdxorgv3AImetric', comment='Records the measurement of prediction quality of the AI model.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/DictionaryEntry', datatype=''), Property(path='https://rdf.spdx.org/v3/AI/domain', varname='httpsrdfspdxorgv3AIdomain', comment='Captures the domain in which the AI package can be used.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/AI/autonomyType', varname='httpsrdfspdxorgv3AIautonomyType', comment='States if a human is involved in the decisions of the AI software.', max_count=1, min_count=None, enum_id='https://rdf.spdx.org/v3/Core/PresenceType', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/AI/safetyRiskAssessment', varname='httpsrdfspdxorgv3AIsafetyRiskAssessment', comment='Categorizes safety risk impact of AI software.', max_count=1, min_count=None, enum_id='https://rdf.spdx.org/v3/AI/SafetyRiskAssessmentType', class_id='', datatype='')], comment='Provides information about the fields in the AI package profile.')
Class(_id='https://rdf.spdx.org/v3/Dataset/Dataset', clsname='https_rdfspdxorgv3DatasetDataset', parent_ids=['https://rdf.spdx.org/v3/Software/Package'], derived_ids=[], properties=[Property(path='https://rdf.spdx.org/v3/Dataset/datasetType', varname='httpsrdfspdxorgv3DatasetdatasetType', comment='Describes the type of the given dataset.', max_count=None, min_count=1, enum_id='https://rdf.spdx.org/v3/Dataset/DatasetType', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/Dataset/dataCollectionProcess', varname='httpsrdfspdxorgv3DatasetdataCollectionProcess', comment='Describes how the dataset was collected.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Dataset/intendedUse', varname='httpsrdfspdxorgv3DatasetintendedUse', comment='Describes what the given dataset should be used for.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Dataset/datasetSize', varname='httpsrdfspdxorgv3DatasetdatasetSize', comment='Captures the size of the dataset.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#nonNegativeInteger'), Property(path='https://rdf.spdx.org/v3/Dataset/datasetNoise', varname='httpsrdfspdxorgv3DatasetdatasetNoise', comment='Describes potentially noisy elements of the dataset.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Dataset/dataPreprocessing', varname='httpsrdfspdxorgv3DatasetdataPreprocessing', comment='Describes the preprocessing steps that were applied to the raw data to create the given dataset.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Dataset/sensor', varname='httpsrdfspdxorgv3Datasetsensor', comment='Describes a sensor used for collecting the data.', max_count=None, min_count=None, enum_id='', class_id='https://rdf.spdx.org/v3/Core/DictionaryEntry', datatype=''), Property(path='https://rdf.spdx.org/v3/Dataset/knownBias', varname='httpsrdfspdxorgv3DatasetknownBias', comment='Records the biases that the dataset is known to encompass.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Dataset/sensitivePersonalInformation', varname='httpsrdfspdxorgv3DatasetsensitivePersonalInformation', comment='Describes if any sensitive personal information is present in the dataset.', max_count=1, min_count=None, enum_id='https://rdf.spdx.org/v3/Core/PresenceType', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/Dataset/anonymizationMethodUsed', varname='httpsrdfspdxorgv3DatasetanonymizationMethodUsed', comment='Describes the anonymization methods used.', max_count=None, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Dataset/confidentialityLevel', varname='httpsrdfspdxorgv3DatasetconfidentialityLevel', comment='Describes the confidentiality level of the data points contained in the dataset.', max_count=1, min_count=None, enum_id='https://rdf.spdx.org/v3/Dataset/ConfidentialityLevelType', class_id='', datatype=''), Property(path='https://rdf.spdx.org/v3/Dataset/datasetUpdateMechanism', varname='httpsrdfspdxorgv3DatasetdatasetUpdateMechanism', comment='Describes a mechanism to update the dataset.', max_count=1, min_count=None, enum_id='', class_id='', datatype='http://www.w3.org/2001/XMLSchema#string'), Property(path='https://rdf.spdx.org/v3/Dataset/datasetAvailability', varname='httpsrdfspdxorgv3DatasetdatasetAvailability', comment='The field describes the availability of a dataset.', max_count=1, min_count=None, enum_id='https://rdf.spdx.org/v3/Dataset/DatasetAvailabilityType', class_id='', datatype='')], comment='Provides information about the fields in the Dataset profile.')
